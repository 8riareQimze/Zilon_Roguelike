using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
        }

        private static IWorldActionProducer _worldActionProduccer;
        private static bool _waitPlayer;
        private static IPlayerActionProducer _playerActionProducer;

        /// <summary>
        ///     Предположим, это юньковский периодический метод.
        /// </summary>
        /// <param name="delta"></param>
        static void Process(double delta)
        {
            if (_waitPlayer)
            {
                PlayerAction();
                return;
            }

            WorldAction();
        }

        static void WorldAction()
        {
            if (_worldActionProduccer.MoveNext())
            {
                _worldActionProduccer.Current.Execute();
            }
            else
            {
                _worldActionProduccer.Reset();
                _waitPlayer = true;
            }
        }

        static void PlayerAction()
        {
            var playerAction = _playerActionProducer.Produce(null); // сюда передать какой то инпут игрока. Если он соответствует какому то действию, то оно вернется.
            if (playerAction != null)
            {
                playerAction.Execute();
                _waitPlayer = false;
            }
        }
    }

    public interface IAction
    {
        Task Execute();
    }

    public interface IWorldActionProducer : IEnumerator<IAction>
    {

    }

    public interface IPlayerActionProducer
    {
        IAction Produce(object playerInput);
    }
}

name: Linter

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  client-lint:
    # Name the Job
    name: Lint client code base
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    env:
      working-directory : ./Zilon.Client/

    steps:
      - uses: actions/checkout@v2
      - run: git pull
      - run: dotnet tool install -g dotnet-format
      - name: format
        run: dotnet-format -f Assets/Zilon/Scripts -v d
        working-directory: ${{env.working-directory}}
      - name: Commit changes
        uses: EndBug/add-and-commit@v5
        with:
          message: "[Bot] Automated dotnet-format update"
          add: "*.cs"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  core-lint:
    # Name the Job
    name: Lint core code base
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    env:
      working-directory : ./Zilon.Core/

    steps:
      - uses: actions/checkout@v2
      - run: git pull
      - run: dotnet tool install -g dotnet-format
      - name: format
        run: dotnet-format Zilon.Core.sln -v d
        working-directory: ${{env.working-directory}}
      - name: Commit changes
        uses: EndBug/add-and-commit@v5
        with:
          message: "[Bot] Automated dotnet-format update"
          add: "*.cs"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  resharper-core-lint:
    # Name the Job
    name: Lint core code base
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    env:
      working-directory : ./Zilon.Core/

    steps:
      - uses: actions/checkout@v2
      - run: git pull
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: Setup ReSharper Command Line Tools
        run: dotnet tool install -g JetBrains.ReSharper.GlobalTools
      - name: Clean up code
        run: jb cleanupcode --profile="Full Cleanup" Zilon.Core.sln
        working-directory: ${{env.working-directory}}
      - name: Commit changes
        uses: EndBug/add-and-commit@v5
        with:
          message: "[Bot] Automated ReSharper update"
          add: "*.cs"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
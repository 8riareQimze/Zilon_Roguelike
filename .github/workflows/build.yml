name: .NET Core

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

env:
  WORKING_DIRECTORY: CDT.LIV.Game

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
    strategy:
      matrix:
        configuration:
          - Release
        runtime:
          - win-x64

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Setup .NET5
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'

      - name: Setup .NET 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1'

      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Publish
        run: dotnet publish CDT.LIV.MonoGameClient/CDT.LIV.MonoGameClient.csproj --configuration ${{ matrix.configuration }} --framework net5.0 --output bin --runtime ${{ matrix.runtime }} --self-contained true -p:PublishSingleFile=true
        
      - name: Copy schemes
        run: cp -a /home/runner/work/CDT.LIV.MonoGameClient/CDT.LIV.MonoGameClient/Zilon.Core/Zilon.Client/Assets/Resources/Schemes/. /home/runner/work/CDT.LIV.MonoGameClient/CDT.LIV.MonoGameClient/CDT.LIV.Game/bin/Content/Schemes/
        
      - name: Upload client into artifacts
        uses: actions/upload-artifact@v1
        with:
          name: LIV.Game.${{ matrix.runtime }}
          path: CDT.LIV.Game/bin
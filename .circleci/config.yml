version: 2
jobs:
  build:
    working_directory: /core-builds
    docker:
      - image: mono:6.0.0.313
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Core/Zilon.Core.csproj -SolutionDirectory ./Zilon.Core
      - run: nuget restore Zilon.Core/Zilon.Bot.Players/Zilon.Bot.Players.csproj -SolutionDirectory ./Zilon.Core
      - run: msbuild Zilon.Core/Zilon.Core/Zilon.Core.csproj /t:Build /p:Configuration=Release /p:OutputPath=../../bin
      - run: msbuild Zilon.Core/Zilon.Bot.Players/Zilon.Bot.Players.csproj /t:Build /p:Configuration=Release /p:OutputPath=../../bin
      - persist_to_workspace:
          root: bin
          paths:
            - ./*
  test_45:
    working_directory: /test45
    docker:
      - image: mono:6.0.0.313
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
      ZILON_LIV_SCHEME_CATALOG: ./Zilon.Client/Assets/Resources/Schemes
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Core.Tests/Zilon.Core.Tests.csproj -SolutionDirectory ./Zilon.Core
      - run: msbuild Zilon.Core/Zilon.Core.Tests/Zilon.Core.Tests.csproj /p:Configuration=Release
      - run: mono --debug /test45/Zilon.Core/packages/NUnit.ConsoleRunner.3.10.0/tools/nunit3-console.exe Zilon.Core/Zilon.Core.Tests/bin/Release/Zilon.Core.Tests.dll --encoding utf-8
  test_players:
    working_directory: /test_players
    docker:
      - image: mono:6.0.0.313
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
      ZILON_LIV_SCHEME_CATALOG: ./Zilon.Client/Assets/Resources/Schemes
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Bot.Players.Tests/Zilon.Bot.Players.Tests.csproj -SolutionDirectory ./Zilon.Core
      - run: msbuild Zilon.Core/Zilon.Bot.Players.Tests/Zilon.Bot.Players.Tests.csproj /p:Configuration=Release
      - run: mono --debug /test_players/Zilon.Core/packages/NUnit.ConsoleRunner.3.10.0/tools/nunit3-console.exe Zilon.Core/Zilon.Bot.Players.Tests/bin/Release/Zilon.Bot.Players.Tests.dll --encoding utf-8
  test_bots:
    working_directory: /test_bots
    docker:
      - image: mono:6.0.0.313
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
      ZILON_LIV_SCHEME_CATALOG: ./Zilon.Client/Assets/Resources/Schemes
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Bot.Players.DevelopmentTests/Zilon.Bot.Players.DevelopmentTests.csproj -SolutionDirectory ./Zilon.Core
      - run: msbuild Zilon.Core/Zilon.Bot.Players.DevelopmentTests/Zilon.Bot.Players.DevelopmentTests.csproj /p:Configuration=Release
      - run: mono --debug /test_bots/Zilon.Core/packages/NUnit.ConsoleRunner.3.10.0/tools/nunit3-console.exe Zilon.Core/Zilon.Bot.Players.DevelopmentTests/bin/Release/Zilon.Bot.Players.DevelopmentTests.dll --encoding utf-8
  test_specflow:
    working_directory: /test_specflow
    docker:
      - image: mono:6.0.0.313
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
      ZILON_LIV_SCHEME_CATALOG: ./Zilon.Client/Assets/Resources/Schemes
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Core.Spec/Zilon.Core.Spec.csproj -SolutionDirectory ./Zilon.Core
      - run: msbuild Zilon.Core/Zilon.Core.Spec/Zilon.Core.Spec.csproj /p:Configuration=Release
      - run: mono --debug /test_specflow/Zilon.Core/packages/NUnit.ConsoleRunner.3.10.0/tools/nunit3-console.exe Zilon.Core/Zilon.Core.Spec/bin/Release/Zilon.Core.Spec.dll --encoding utf-8
  build_Win_x64:
    docker:
      - image: gableroux/unity3d:2019.2.5f1-windows
    steps:
      - checkout
      - run: mkdir -p /root/.cache/unity3d
      - run: mkdir -p /root/.local/share/unity3d/Unity/
      - run: openssl aes-256-cbc -d -in .circleci/Unity_v2019.x.ulf-cipher -k ${CIPHER_KEY} >> /root/.local/share/unity3d/Unity/Unity_lic.ulf
      - attach_workspace:
          at: /core-builds/bin
      - run: mkdir -p ./Zilon.Client/Assets/Plugins/ && cp -a /core-builds/bin/. ./Zilon.Client/Assets/Plugins/
      - run:
          command: |
            apt update && apt install -y git
            git clone https://github.com/kreghek/Zilon_Roguelike_Plugins.git temp
      - run: cp -a temp/. ./Zilon.Client/Assets/Plugins/
      - run:
          name: Build
          command: chmod +x .circleci/buildWindows64.sh && .circleci/buildWindows64.sh
      - run:
          name: Zipping build
          command: apt update && apt -y install zip && zip -r /root/LAST_Win64.zip ./Zilon.Client/Builds/*
      - store_artifacts:
          path: /root/LAST_Win64.zip
  build_Win_x32:
    docker:
      - image: gableroux/unity3d:2019.2.5f1-windows
    steps:
      - checkout
      - run: mkdir -p /root/.cache/unity3d
      - run: mkdir -p /root/.local/share/unity3d/Unity/
      - run: openssl aes-256-cbc -d -in .circleci/Unity_v2019.x.ulf-cipher -k ${CIPHER_KEY} >> /root/.local/share/unity3d/Unity/Unity_lic.ulf
      - attach_workspace:
          at: /core-builds/bin
      - run: mkdir -p ./Zilon.Client/Assets/Plugins/ && cp -a /core-builds/bin/. ./Zilon.Client/Assets/Plugins/
      - run:
          command: |
            apt update && apt install -y git
            git clone https://github.com/kreghek/Zilon_Roguelike_Plugins.git temp
      - run: cp -a temp/. ./Zilon.Client/Assets/Plugins/
      - run:
          name: Build
          command: chmod +x .circleci/buildWindows32.sh && .circleci/buildWindows32.sh
      - run:
          name: Zipping build
          command: apt update && apt -y install zip && zip -r /root/LAST_Win32.zip ./Zilon.Client/Builds/*
      - store_artifacts:
          path: /root/LAST_Win32.zip
  build_Linux_x64:
    docker:
      - image: gableroux/unity3d:2019.2.5f1-windows
    steps:
      - checkout
      - run: mkdir -p /root/.cache/unity3d
      - run: mkdir -p /root/.local/share/unity3d/Unity/
      - run: openssl aes-256-cbc -d -in .circleci/Unity_v2019.x.ulf-cipher -k ${CIPHER_KEY} >> /root/.local/share/unity3d/Unity/Unity_lic.ulf
      - attach_workspace:
          at: /core-builds/bin
      - run: mkdir -p ./Zilon.Client/Assets/Plugins/ && cp -a /core-builds/bin/. ./Zilon.Client/Assets/Plugins/
      - run:
          command: |
            apt update && apt install -y git
            git clone https://github.com/kreghek/Zilon_Roguelike_Plugins.git temp
      - run: cp -a temp/. ./Zilon.Client/Assets/Plugins/
      - run:
          name: Build
          command: chmod +x .circleci/buildLinux64.sh && .circleci/buildLinux64.sh
      - run:
          name: Zipping build
          command: apt update && apt -y install zip && zip -r /root/LAST_Linux64.zip ./Zilon.Client/Builds/*
      - store_artifacts:
          path: /root/LAST_Linux64.zip
  # Только для этого билда на выходе получается пустая папка.
  # Поэтому он временно отключен.
  build_Linux_x32:
    docker:
      - image: gableroux/unity3d:2019.2.5f1-windows
    steps:
      - checkout
      - run: mkdir -p /root/.cache/unity3d
      - run: mkdir -p /root/.local/share/unity3d/Unity/
      - run: openssl aes-256-cbc -d -in .circleci/Unity_v2019.x.ulf-cipher -k ${CIPHER_KEY} >> /root/.local/share/unity3d/Unity/Unity_lic.ulf
      - attach_workspace:
          at: /core-builds/bin
      - run: mkdir -p ./Zilon.Client/Assets/Plugins/ && cp -a /core-builds/bin/. ./Zilon.Client/Assets/Plugins/
      - run:
          command: |
            apt update && apt install -y git
            git clone https://github.com/kreghek/Zilon_Roguelike_Plugins.git temp
      - run: cp -a temp/. ./Zilon.Client/Assets/Plugins/
      - run:
          name: Build
          command: chmod +x .circleci/buildLinux32.sh && .circleci/buildLinux32.sh
      - run:
          name: Zipping build
          command: apt update && apt -y install zip && zip -r /root/LAST_Linux32.zip ./Zilon.Client/Builds/*
      - store_artifacts:
          path: /root/LAST_Linux32.zip
  build_MacOS_x64:
    docker:
      - image: gableroux/unity3d:2019.2.5f1-mac
    steps:
      - checkout
      - run: mkdir -p /root/.cache/unity3d
      - run: mkdir -p /root/.local/share/unity3d/Unity/
      - run: openssl aes-256-cbc -d -in .circleci/Unity_v2019-mac.x.ulf-cipher -k ${CIPHER_KEY_MAC} >> /root/.local/share/unity3d/Unity/Unity_lic.ulf
      - attach_workspace:
          at: /core-builds/bin
      - run: mkdir -p ./Zilon.Client/Assets/Plugins/ && cp -a /core-builds/bin/. ./Zilon.Client/Assets/Plugins/
      - run:
          command: |
            apt update && apt install -y git
            git clone https://github.com/kreghek/Zilon_Roguelike_Plugins.git temp
      - run: cp -a temp/. ./Zilon.Client/Assets/Plugins/
      - run:
          name: Build
          command: chmod +x .circleci/buildMacOsx64.sh && .circleci/buildMacOsx64.sh
      - run:
          name: Zipping build
          command: apt update && apt -y install zip && zip -r /root/LAST_MacOsx64.zip ./Zilon.Client/Builds/*
      - store_artifacts:
          path: /root/LAST_MacOsx64.zip
  build_MacOS_x32:
    docker:
      - image: gableroux/unity3d:2019.2.5f1-mac
    steps:
      - checkout
      - run: mkdir -p /root/.cache/unity3d
      - run: mkdir -p /root/.local/share/unity3d/Unity/
      - run: openssl aes-256-cbc -d -in .circleci/Unity_v2019-mac.x.ulf-cipher -k ${CIPHER_KEY_MAC} >> /root/.local/share/unity3d/Unity/Unity_lic.ulf
      - attach_workspace:
          at: /core-builds/bin
      - run: mkdir -p ./Zilon.Client/Assets/Plugins/ && cp -a /core-builds/bin/. ./Zilon.Client/Assets/Plugins/
      - run:
          command: |
            apt update && apt install -y git
            git clone https://github.com/kreghek/Zilon_Roguelike_Plugins.git temp
      - run: cp -a temp/. ./Zilon.Client/Assets/Plugins/
      - run:
          name: Build
          command: chmod +x .circleci/buildMacOsx32.sh && .circleci/buildMacOsx32.sh
      - run:
          name: Zipping build
          command: apt update && apt -y install zip && zip -r /root/LAST_MacOsx32.zip ./Zilon.Client/Builds/*
      - store_artifacts:
          path: /root/LAST_MacOsx32.zip
  build_MacOS_Universal:
    docker:
      - image: gableroux/unity3d:2019.2.5f1-mac
    steps:
      - checkout
      - run: mkdir -p /root/.cache/unity3d
      - run: mkdir -p /root/.local/share/unity3d/Unity/
      - run: openssl aes-256-cbc -d -in .circleci/Unity_v2019-mac.x.ulf-cipher -k ${CIPHER_KEY_MAC} >> /root/.local/share/unity3d/Unity/Unity_lic.ulf
      - attach_workspace:
          at: /core-builds/bin
      - run: mkdir -p ./Zilon.Client/Assets/Plugins/ && cp -a /core-builds/bin/. ./Zilon.Client/Assets/Plugins/
      - run:
          command: |
            apt update && apt install -y git
            git clone https://github.com/kreghek/Zilon_Roguelike_Plugins.git temp
      - run: cp -a temp/. ./Zilon.Client/Assets/Plugins/
      - run:
          name: Build
          command: chmod +x .circleci/buildMacOsxUniversal.sh && .circleci/buildMacOsxUniversal.sh
      - run:
          name: Zipping build
          command: apt update && apt -y install zip && zip -r /root/LAST_MacOsxUniversal.zip ./Zilon.Client/Builds/*
      - store_artifacts:
          path: /root/LAST_MacOsxUniversal.zip
  test_mass_sector_generator:
    working_directory: /test_mass_sector_generator
    docker:
      - image: mono:6.0.0.313
    environment:
      ZILON_LIV_SCHEME_CATALOG: /test_mass_sector_generator/Zilon.Client/Assets/Resources/Schemes
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Core.MassSectorGenerator/Zilon.Core.MassSectorGenerator.csproj -SolutionDirectory ./Zilon.Core
      - run: msbuild Zilon.Core/Zilon.Core.MassSectorGenerator/Zilon.Core.MassSectorGenerator.csproj /p:Configuration=Debug
      - run:
          name: Mass Launcher
          command: chmod +x .circleci/sector_mass_generator.sh && .circleci/sector_mass_generator.sh
      - store_artifacts:
          path: /test_mass_sector_generator/maps
  bench_move:
    working_directory: /bench_move
    docker:
      - image: mono:6.0.0.313
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
      ZILON_LIV_SCHEME_CATALOG: ./Zilon.Client/Assets/Resources/Schemes
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Core.Benchmarks.Move/Zilon.Core.Benchmarks.Move.csproj -SolutionDirectory ./Zilon.Core
      - run: msbuild Zilon.Core/Zilon.Core.Benchmarks.Move/Zilon.Core.Benchmarks.Move.csproj /p:Configuration=Release
      - run: chmod u+x /bench_move/Zilon.Core/Zilon.Core.Benchmarks.Move/bin/Release/Zilon.Core.Benchmarks.Move.exe
      - run: mono --debug /bench_move/Zilon.Core/Zilon.Core.Benchmarks.Move/bin/Release/Zilon.Core.Benchmarks.Move.exe iteration_Count=1000 buildNumber=123 artifact_path="bench_move/dotnetbenchmark-reports"
  bench_create_sector:
    working_directory: /bench_create_sector
    docker:
      - image: mono:6.0.0.313
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
      ZILON_LIV_SCHEME_CATALOG: ./Zilon.Client/Assets/Resources/Schemes
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Core.Benchmarks.CreateSector/Zilon.Core.Benchmarks.CreateSector.csproj -SolutionDirectory ./Zilon.Core
      - run: msbuild Zilon.Core/Zilon.Core.Benchmarks.CreateSector/Zilon.Core.Benchmarks.CreateSector.csproj /p:Configuration=Release
      - run: chmod u+x /bench_create_sector/Zilon.Core/Zilon.Core.Benchmarks.CreateSector/bin/Release/Zilon.Core.Benchmarks.CreateSector.exe
      - run: mono --debug /bench_create_sector/Zilon.Core/Zilon.Core.Benchmarks.CreateSector/bin/Release/Zilon.Core.Benchmarks.CreateSector.exe iteration_Count=1000 buildNumber=123 artifact_path="bench_create_sector/dotnetbenchmark-reports"
  bench_create_globe:
    working_directory: /bench_create_globe
    docker:
      - image: mono:6.0.0.313
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
      ZILON_LIV_SCHEME_CATALOG: ./Zilon.Client/Assets/Resources/Schemes
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Core.Benchmarks.CreateGlobe/Zilon.Core.Benchmarks.CreateGlobe.csproj -SolutionDirectory ./Zilon.Core
      - run: msbuild Zilon.Core/Zilon.Core.Benchmarks.CreateGlobe/Zilon.Core.Benchmarks.CreateGlobe.csproj /p:Configuration=Release
      - run: chmod u+x /bench_create_globe/Zilon.Core/Zilon.Core.Benchmarks.CreateGlobe/bin/Release/Zilon.Core.Benchmarks.CreateGlobe.exe
      - run: mono --debug /bench_create_globe/Zilon.Core/Zilon.Core.Benchmarks.CreateGlobe/bin/Release/Zilon.Core.Benchmarks.CreateGlobe.exe iteration_Count=1000 buildNumber=123 artifact_path="bench_create_globe/dotnetbenchmark-reports"
workflows:
  version: 2
  commit:
    jobs:
      - build
      - test_45:
          requires:
            - build
      - test_players:
          requires:
            - build
      - test_specflow:
          requires:
            - build
      - test_bots:
          requires:
            - build
            - test_45
            - test_specflow
      - build_Win_x64:
          requires:
            - build
            - test_45
            - test_specflow
  release:
    jobs:
      - build:
          filters:
            branches:
              only:
                - /release.*/
                - feature-556-pumpkins
      - test_45:
          requires:
            - build
          filters:
            branches:
              only:
                - /release.*/
                - feature-556-pumpkins
      - test_players:
          requires:
            - build
          filters:
            branches:
              only:
                - /release.*/
                - feature-556-pumpkins
      - test_specflow:
          requires:
            - build
          filters:
            branches:
              only:
                - /release.*/
                - feature-556-pumpkins
      - test_bots:
          requires:
            - build
            - test_45
            - test_specflow
          filters:
            branches:
              only:
                - /release.*/
                - feature-556-pumpkins
      - build_Win_x64:
          requires:
            - build
            - test_45
            - test_specflow
          filters:
            branches:
              only:
                - /release.*/
                - feature-556-pumpkins
      - build_Win_x32:
          requires:
            - build
            - test_45
            - test_specflow
          filters:
            branches:
              only:
                - /release.*/
                - feature-556-pumpkins
      - build_Linux_x64:
          requires:
            - build
            - test_45
            - test_specflow
          filters:
            branches:
              only:
                - /release.*/
                - feature-556-pumpkins
      - build_MacOS_Universal:
          requires:
            - build
            - test_45
            - test_specflow
          filters:
            branches:
              only:
                - /release.*/
                - feature-556-pumpkins
#      - build_Linux_x32:
#          requires:
#            - build
#            - test_45
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
                - beta
    jobs:
      - build
      - test_45:
          requires:
            - build
      - test_players:
          requires:
            - build
      - test_specflow:
          requires:
            - build
      - build_Win_x64:
          requires:
            - build
            - test_45
            - test_specflow
      - build_Win_x32:
          requires:
            - build
            - test_45
            - test_specflow
      - build_Linux_x64:
          requires:
            - build
            - test_45
            - test_specflow
      - build_MacOS_Universal:
          requires:
            - build
            - test_45
            - test_specflow
#      - build_Linux_x32:
#          requires:
#            - build
#            - test_45
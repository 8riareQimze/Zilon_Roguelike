version: 2
jobs:
  build:
    docker:
      - image: aparker/circleci-dotnet-mono:latest
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Game.sln
      - run: msbuild Zilon.Core/Zilon.Game.sln /t:Build /p:Configuration=Release
  test_45:
    working_directory: /test45
    docker:
      - image: mono:latest
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
      ZILON_LIV_SCHEME_CATALOG: ./Zilon.Client/Assets/Resources/Schemes
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Core.Tests/Zilon.Core.Tests.csproj -SolutionDirectory ./Zilon.Core
      - run: msbuild Zilon.Core/Zilon.Core.Tests/Zilon.Core.Tests.csproj /p:Configuration=Release
      - run: mono --debug /test45/Zilon.Core/packages/NUnit.ConsoleRunner.3.10.0/tools/nunit3-console.exe Zilon.Core/Zilon.Core.Tests/bin/Release/Zilon.Core.Tests.dll --encoding utf-8
  build_Win_x64:
    docker:
      - image: gableroux/unity3d:2018.4.8f1
    steps:
      - checkout
      - run: openssl aes-256-cbc -d -in .circleci/Unity_v2018.x.ulf-cipher -k ${CIPHER_KEY} >> .circleci/Unity_v2018.x.ulf
      - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -silent-crashes -logFile -manualLicenseFile .circleci/Unity_v2018.x.ulf || exit 0
      - run:
          name: Build
          command: /opt/Unity/Editor/Unity -projectPath ./Zilon.Client -buildWindows64Player ./Builds/ -quit -batchmode -noUpm -logFile -nographics
      - run:
          name: Zipping build
          command: apt update && apt -y install zip && zip -r "build.zip" ./Builds/
      - store_artifacts:
          path: build.zip
  
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test_45
      - build_Win_x64
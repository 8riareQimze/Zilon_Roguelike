version: 2
jobs:
  build:
    docker:
      - image: aparker/circleci-dotnet-mono:latest
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Game.sln
      - run: msbuild Zilon.Core/Zilon.Game.sln /t:Build /p:Configuration=Release
  test_45:
    working_directory: /test45
    docker:
      - image: mono:latest
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OUTPUT: 1
      ZILON_LIV_SCHEME_CATALOG: ./Zilon.Client/Assets/Resources/Schemes
    steps:
      - checkout
      - run: nuget restore Zilon.Core/Zilon.Core.Tests/Zilon.Core.Tests.csproj -SolutionDirectory ./Zilon.Core
      - run: msbuild Zilon.Core/Zilon.Core.Tests/Zilon.Core.Tests.csproj /p:Configuration=Release
      - run: mono --debug /test45/Zilon.Core/packages/NUnit.ConsoleRunner.3.10.0/tools/nunit3-console.exe Zilon.Core/Zilon.Core.Tests/bin/Release/Zilon.Core.Tests.dll --encoding utf-8
  build_Win_x64:
    docker:
      - image: gableroux/unity3d:2018.3.4f1
    steps:
      - checkout
      - run:
          name: Fetching build scripts
          command: |
            apt update && apt install -y git 
            git clone https://github.com/qwertyuu/unity-ci-build-scripts.git
      - run:
          name: Getting build scripts for your unity version if possible
          command: UNITY_VERSION=2018.3.4f1; if [ $(git ls-remote https://github.com/qwertyuu/unity-ci-build-scripts.git "$UNITY_VERSION" | wc -l) -eq 1 ]; then cd unity-ci-build-scripts && git pull origin "$UNITY_VERSION" && cd ..; fi
      - run:
          name: Injecting build scripts into the project
          command: |
            cp -r unity-ci-build-scripts/Assets/Editor ./Assets
            cp -r unity-ci-build-scripts/ci ./ci
      - run: 
          name: Converting Unity license
          command: chmod +x ./ci/before_script.sh && ./ci/before_script.sh
      - run: ls -ls /usr/bin/python*
      - run:
          name: Building game binaries
          command: chmod +x ./ci/build.sh && ./ci/build.sh
      - run: 
          name: Zipping build
          command: apt update && apt -y install zip && zip -r "build.zip" ./Builds/
      - store_artifacts:
          path: build.zip
  
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test_45
      - build_Win_x64
// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Zilon.Core.Spec.TestCases
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Bug_EquipmentAfterContainerLoot")]
    public partial class Bug_EquipmentAfterContainerLootFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Bug_EquipmentAfterContainerLoot.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Bug_EquipmentAfterContainerLoot", "\tКак игроку\r\n\tМне нужно, чтобы экипировка из разных источников (уже в инвентаре, " +
                    "сундуки, тела противников)\r\n\tмогла быть назначены персонажу\r\n\tДля того, чтобы на" +
                    "делять персонажа различными действиями и бунусами, которые даёт экипировка.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Берём ресурсы из сундука. После этого назначаем экипировку, которая уже была в ин" +
            "вентаре, персонажу.")]
        [NUnit.Framework.CategoryAttribute("props")]
        [NUnit.Framework.CategoryAttribute("equipment")]
        [NUnit.Framework.CategoryAttribute("dev0")]
        [NUnit.Framework.CategoryAttribute("bug")]
        public virtual void БерёмРесурсыИзСундука_ПослеЭтогоНазначаемЭкипировкуКотораяУжеБылаВИнвентареПерсонажу_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Берём ресурсы из сундука. После этого назначаем экипировку, которая уже была в ин" +
                    "вентаре, персонажу.", new string[] {
                        "props",
                        "equipment",
                        "dev0",
                        "bug"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("Персонаж стоит возле сундука с ресурсами", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.When("Я открываю сундук", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.And("Я открываю окно с содержимым сундука", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("Я переношу содержимое себе в инвентарь", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("Я открываю окна инвентаря", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("Я назначаю экипировку из инвентаря", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.Then("Персонажу назначена экипировка", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.And("Текущая экипировка перенесена в инвентарь", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
